openapi: "3.0.0"
info:
  version: "1"
  title: "To-Do List"
  description: ""
paths:
  /todos/{user_id}:
    get:
      operationId: "get_todos"
      description: ""
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/todo"
        400:
          $ref: "#/components/responses/InvalidParamaters"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    post:
      operationId: "add_todo"
      description: ""
      parameters:
        - in: "path"
          name: "user_id"
          required: true
          schema:
            type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo"
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo"
        400:
          $ref: "#/components/responses/InvalidParamaters"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
  /todos/{user_id}/{todo_id}:
    put:
      operationId: "update_todo"
      description: ""
      parameters:
        - name: "user_id"
          in: "path"
          required: true
          schema:
            type: "integer"
        - name: "todo_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo"
        400:
          $ref: "#/components/responses/InvalidParamaters"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
    delete:
      operationId: "delete_todo"
      description: ""
      parameters:
        - name: "user_id"
          in: "path"
          required: true
          schema:
            type: "integer"
        - name: "todo_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: "string"
        400:
          $ref: "#/components/responses/InvalidParamaters"
        401:
          $ref: "#/components/responses/Unauthorized"
        403:
          $ref: "#/components/responses/Forbidden"
components:
  securitySchemes: {}
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InvalidParamaters:
      description: Invalid Parameters
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    todo:
      properties:
        id:
          nullable: false
          type: "number"
        data:
          nullable: false
          type: "string"
        completed:
          nullable: false
          type: "boolean"
        completed_timestamp:
          nullable: false
          type: "number"
